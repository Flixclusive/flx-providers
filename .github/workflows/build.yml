name: Build

# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
concurrency: 
  group: "build"
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          path: "src"

      - name: Checkout builds
        uses: actions/checkout@master
        with:
          ref: "builds"
          path: "builds"

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Initialize Secrets
        env:
          SUPERSTREAM_FIRST_API: ${{ secrets.SUPERSTREAM_FIRST_API }}
          SUPERSTREAM_SECOND_API: ${{ secrets.SUPERSTREAM_SECOND_API }}
          SUPERSTREAM_THIRD_API: ${{ secrets.SUPERSTREAM_THIRD_API }}
          SUPERSTREAM_FOURTH_API: ${{ secrets.SUPERSTREAM_FOURTH_API }}
        run: |
          cd $GITHUB_WORKSPACE/src
          echo SUPERSTREAM_FIRST_API=$SUPERSTREAM_FIRST_API >> local.properties
          echo SUPERSTREAM_SECOND_API=$SUPERSTREAM_SECOND_API >> local.properties
          echo SUPERSTREAM_THIRD_API=$SUPERSTREAM_THIRD_API >> local.properties
          echo SUPERSTREAM_FOURTH_API=$SUPERSTREAM_FOURTH_API >> local.properties

      # Change `**/**/build/*.flx` if you've changed the providers file structure.
      - name: Build Plugins
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod +x gradlew
          ./gradlew make generateUpdaterJson
          cp **/**/build/*.flx $GITHUB_WORKSPACE/builds
          cp build/updater.json $GITHUB_WORKSPACE/builds

      - name: Push builds
        run: |
          cd $GITHUB_WORKSPACE/builds
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "Build $GITHUB_SHA" || exit 0   # do not error if nothing to commit
          git push

      - name: Update README.md with library statuses
        run: |
          cd $GITHUB_WORKSPACE/src
          find providers -name 'build.gradle.kts' | while read -r file; do
          lib_name=$(basename "$(dirname "$file")")
          status=$(grep -oP 'status\.set\((Status\.)?\K[^\)]+' "$file")
          
          case $status in
          Status.Working|Working) status_emoji="🟢 OK";;
          Status.Beta|Beta) status_emoji="🔵 BETA";;
          Status.Maintenance|Maintenance) status_emoji="🟡 MAINTENANCE";;
          Status.Down|Down) status_emoji="🔴 DOWN";;
          *) status_emoji="❓ UNKNOWN";;
          esac
          
          echo "| $lib_name | $status_emoji |" >> status_table.md
          done
          
          echo -e "| Name          | Status    |\n| :-----------  | :-------  |" | cat - status_table.md > updated_table.md
          
          if grep -q '| Name          | Status    |' README.md; then
          sed -i '/| Name          | Status    |/,$d' README.md
          fi
          
          echo "#### List of available providers:" >> README.md
          cat updated_table.md >> README.md
          
          # Clean up
          rm status_table.md updated_table.md

      - name: Push updated README.md
        run: |
          cd $GITHUB_WORKSPACE/src
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git commit -m "docs: update README.md [$GITHUB_SHA]" || exit 0   # do not error if nothing to commit
          git push